---
import {
  getAncestorPagesRecursive,
  getPathFromAncestorPages,
} from "../utils/notion/getPageTree";
import type { ChildDatabaseBlockObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import { queryNotionDatabasePageAll } from "../utils/notion/api/databases";
import { toPage } from "../utils/notion/utils";
import options from "virtual:notro-options";
import DatabaseItem from "./DatabaseItem.astro";

interface Props {
  block: ChildDatabaseBlockObjectResponse;
}

const { block } = Astro.props;

const ancestors = getPathFromAncestorPages(
  await getAncestorPagesRecursive(block.id),
);

const pages = await queryNotionDatabasePageAll({
  database_id: block.id,
  filter: options.queryChildDatabaseParameters.filter,
  sorts: options.queryChildDatabaseParameters.sorts,
});

const databasePages = pages.map((page) => toPage(page, ancestors));
---

<div id={block.id} class=`notion-selectable notion-collection_view-block`>
  {
    databasePages.map((page) => {
      return <DatabaseItem page={page} />;
    })
  }
</div>
