---
import type { PageObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import RichText from "./RichText.astro";
import * as console from "node:console";
import type { Page } from "../utils/notion/utils";

interface Props {
  name: string;
  property: PageObjectResponse["properties"][1];
  page: Page;
}

const { name, property, page } = Astro.props;
---

{
  (() => {
    switch (property.type) {
      case "title":
        return (
          property.title && (
            <a href={page.path + page.slug}>
              <h3 class="notion-property-title">
                <RichText richText={property.title} />
              </h3>
            </a>
          )
        );
      case "rich_text":
        return (
          property.rich_text && (
            <p class="notion-property-text">
              <RichText richText={property.rich_text} />
            </p>
          )
        );
      case "select":
        return (
          property.select && (
            <span class="notion-property-select">{property.select?.name}</span>
          )
        );
      case "multi_select":
        return (
          property.multi_select.length > 0 && (
            <div class="notion-property-multi-select">
              {property.multi_select.map((item) => {
                return <span class="notion-property-select">{item.name}</span>;
              })}
            </div>
          )
        );
      case "date":
        return (
          property.date && (
            <time class="notion-property-date" datetime={property.date?.start}>
              {property.date?.start}
            </time>
          )
        );
      case "button":
      case "checkbox":
      case "created_by":
      case "created_time":
      case "email":
      case "files":
      case "formula":
      case "last_edited_by":
      case "last_edited_time":
      case "number":
      case "people":
      case "phone_number":
      case "relation":
      case "rollup":
      case "status":
      case "unique_id":
      case "url":
      case "verification":
      default:
        console.log("Unsupported property type: " + property.type);
        return null;
    }
  })()
}
