---
import type { PageObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import options from "virtual:notro-options";
import DatabaseProperty from "./DatabaseProperty.astro";
import type { Page } from "../utils/notion/utils";

interface Props {
  page: Page;
}

const { page } = Astro.props;

const filteredProperties: [string, PageObjectResponse["properties"][1]][] =
  Object.entries(page.properties)
    .filter(([key]) => {
      return (
        options.visibleChildDatabaseProperties.length === 0 ||
        options.visibleChildDatabaseProperties.includes(key)
      );
    })
    .sort(([keyA], [keyB]) => {
      const indexA = options.visibleChildDatabaseProperties.indexOf(keyA);
      const indexB = options.visibleChildDatabaseProperties.indexOf(keyB);

      return indexA - indexB;
    });
---

{
  filteredProperties?.map(([name, value]) => {
    return (
      <div
        class="notion-collection-property"
        data-property-id={value.id}
        data-property-name={name}
      >
        <DatabaseProperty name={name} property={value} page={page} />
      </div>
    );
  })
}
